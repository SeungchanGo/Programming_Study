1강 
명령프롬포트(컴파일): java -d bin src/module-info.java src/sec03/exam01/*.java
명령프롬포트(실행): java -p bin -m practice-1/sec03.exam01.Hello

- 모듈: 외부에서 재사용할 수 있는 패키지들을 묶은 것
- 모듈 기술자(module-info.java): 해당 모듈의 이름이 무엇인지, 의존하는 모듈이 무엇인지, 해당 모듈을 외부에서 어떻게 사용할 수 있느지
- 의존하는 모듈: 해당 모듈(프로젝트)이 실행하기 위해서 필요한 외부 모듈을 말함

패키지 선언
pakage sec03.exam01;
클래스 선언
public class CharExample
메소드 선언 
public static void main(String[] args)


2강 변수와 타입
변수: 값을 저장할 수 있는 메모리의 특정 번지에 붙여진 이름
- 변수를 통해 해당 메모리 번지에 하나의 값을 저장하고 읽을 수 있음 
- 변수는 정수, 실수 등 다양한 타입의 값을 저장할 수 있음.
- 변수 사용을 위해서 변수 선언이 필요

변수 선언: 변수에 어떤 타입의 데이터를 저장하고 변수 이름이 무엇인지 결정
변수 이름: 변수가 어떤 값을 저장하고 있는지 쉽게 알 수 있도록 의미 있는 이름을 지어주는 것
- 변수 이름에 한글을 포함하지 않는 것이 좋음
변수 사용: 변수의 값을 이용해서 출력문이나 연산식을 수행하는 것

로컬 변수: 메소드 블록 내에서 선언된 변수를 로컬 변수라고 함


5강
section1
기본 타입: 정수, 실수, 문자, 논리 리터럴 저장
참조 타입: 객체의 번지를 참조하는 타입 ~ 배열, 열거, 클래스, 인터페이스
- 힙 영역: 힙이라는 메모리 영역에 String 객체로 문자열을 형성함. 스택영역에는 객체의 생성번지가 변수로 저장됨. 


메모리 사용 영역
- 메소드 영역: 클래스 코드가 저장됨. 각 클래스에는 정적 필드, 메소드 코드, 생성자 코드가 포함됨
~ .java파일을 컴파일하면 .class라는 바이트 코드는 메소드 영역(메모리 영역)에 로딩함. 이렇게 저장된 클래스는 객체를 만들거나 변수를 저장함. 메소드 영역에는 클래스들의 바이트 코드가 저장된다.
- 힙 영역 
- JVM 스택 영역


JVM 스택 영역
- 기본 타입변수는 메소드를 호출할 때마다 프레임이 추가되고, 메소드가 종료되면 해당 프레임이 제거된다. 
Void method() {
}
- 참조 타입 변수는 스택 영역에 힘 여역에 생성된 객체의 주소를 가짐

참조 타입 변수 간의 ==, != 연산
: 참조 타입에 저장된 객체를 비교함. 
- 동일 객체를 참조하는지, 다른 객체를 참조하는지 알아볼 때 사용함 
- 번지 값의 비교

null과 NullPointerException
: 참조 타입 변수는 객체를 참조하지 않는다는 뜻으로 null 값을 가질 수 있음.
- null로 초기화된 참조변수도 스택 영역에 생성
- 예외: 프로그램 실행 도중 발생하는 오류 ~ error: 하드웨어나 OS로 인해 발생 / exception: 실행하는 도중 발생
- NullPointException: 참조 타입 변수가 null인 상태에서 존재하지 않는 객체의 데이터나 메소드를 사용할 경우 발생
→ 해당 참조 변수가 객체를 참조하도록 수정하여 해결


section2
배열: 데이터를 연속된 공간(메모리)에 나열하고 각 데이터에 인덱스를 부여한 자료 구조
- 같은 타입의 데이터만 저장할 수 있음
- 한 번 생성된 배열은 길이를 늘리거나 줄일 수 없음.

배열 변수 선언: 타입[] 변수 = null;
배열 생성
-값 목록으로 배열 생성: 타입[] 변수 = {값0, 값1, 값2, 값3 ...};
- new 연산자를 이용해서 배열 생성: int[] scores = new int[30];


sec
